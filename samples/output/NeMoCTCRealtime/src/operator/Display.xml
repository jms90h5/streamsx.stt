<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<operatorInstanceModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator/instance" xmlns:an="http://www.ibm.com/xmlns/prod/streams/spl/annotation" xmlns:tt="http://www.ibm.com/xmlns/prod/streams/spl/tupleType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <context>
    <kind>spl.utility::Custom</kind>
    <class>Display</class>
    <operatorModelDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl/spl/utility/Custom</operatorModelDirectory>
    <applicationDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples</applicationDirectory>
    <dataDirectory/>
    <outputDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples/output/NeMoCTCRealtime</outputDirectory>
    <toolkits>
      <toolkit isCurrentToolkit="false">
        <name>samples</name>
        <rootDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples</rootDirectory>
        <index>0</index>
      </toolkit>
      <toolkit isCurrentToolkit="true">
        <name>spl</name>
        <rootDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl</rootDirectory>
        <index>1</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.teracloud.streamsx.stt</name>
        <rootDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt</rootDirectory>
        <index>2</index>
      </toolkit>
    </toolkits>
    <optimized>true</optimized>
    <verbose>false</verbose>
    <networkByteOrdering>false</networkByteOrdering>
    <codeBeautification>false</codeBeautification>
    <includes>
      <include>"../type/B2rNrSkKrWYTTG0yXfkdrUykBA8vL_1Bhn_1bqqbqWmnzNkPmG1aLkG2HTzzPOuq28lNrJgpRUEPHI34Wv5perWBo.h"</include>
      <include>"../type/BcyIw_123yuxalGHt_0UPzvHr6jutVOfqYy4EjyWMc7ELFtCMYkxYjxKoc_1GyrP3_0eilO0roi7TbPc_14tWTm1iZBT.h"</include>
    </includes>
    <stateVariables>
      <stateVariable>
        <name>state$totalProcessingMs</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$25</cppExpression>
          <splExpression>0</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>NeMoCTCRealtime.spl</file>
            <line>89</line>
            <column>57</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>NeMoCTCRealtime.spl</file>
          <line>89</line>
          <column>37</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$totalAudioMs</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$26</cppExpression>
          <splExpression>0</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>NeMoCTCRealtime.spl</file>
            <line>90</line>
            <column>52</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>NeMoCTCRealtime.spl</file>
          <line>90</line>
          <column>37</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$sessionStart</name>
        <cppType>SPL::timestamp</cppType>
        <splType>timestamp</splType>
        <value>
          <cppType>SPL::timestamp</cppType>
          <splType>timestamp</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>::SPL::Functions::Time::getTimestamp()</cppExpression>
          <splExpression>getTimestamp()</splExpression>
          <hasFunctions>true</hasFunctions>
          <hasSideEffects>true</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>NeMoCTCRealtime.spl</file>
            <line>91</line>
            <column>54</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>NeMoCTCRealtime.spl</file>
          <line>91</line>
          <column>39</column>
        </sourceLocation>
      </stateVariable>
    </stateVariables>
    <runtimeConstants>
      <runtimeConstant>
        <name>lit$0</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"] "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$1</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"["</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$2</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"x real-time"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$3</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"ms, Speedup: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$4</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"ms, Audio: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$5</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"    Processing: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$6</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"\n=== NeMo CTC Performance Summary ==="</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$7</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"false"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$8</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"Fast Processing"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$9</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"1x Realtime Playback"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$10</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"Mode: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$11</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"ms"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$12</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"512"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$13</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"Chunk size: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$14</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"s"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$15</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>1000</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$16</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"Total audio: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$17</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"s"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$18</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>1000</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$19</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"Total processing: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$20</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"x real-time"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$21</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"Overall speedup: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$22</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"s"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$23</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"Wall time: "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$24</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"Model: nvidia/stt_en_fastconformer_hybrid_large_streaming_multi (CTC)"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$25</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$26</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>0</value>
      </runtimeConstant>
    </runtimeConstants>
    <sourceLocation>
      <file>NeMoCTCRealtime.spl</file>
      <line>86</line>
      <column>9</column>
    </sourceLocation>
    <productVersion>7.2.0.0</productVersion>
    <checkpointKind>none</checkpointKind>
  </context>
  <parameters/>
  <inputPorts>
    <inputPort isControlPort="true">
      <index>0</index>
      <tupleCppName>iport$0</tupleCppName>
      <tupleCppType>SPL::B2rNrSkKrWYTTG0yXfkdrUykBA8vL_1Bhn_1bqqbqWmnzNkPmG1aLkG2HTzzPOuq28lNrJgpRUEPHI34Wv5perWBo</tupleCppType>
      <tupleSPLType>tuple&lt;rstring transcription,float64 processingTimeMs,float64 audioChunkMs,float64 speedupFactor,int32 chunkNumber&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>NeMoCTCRealtime.spl</file>
        <line>86</line>
        <column>32</column>
      </sourceLocation>
      <tupleLogic>{
    ::SPL::Functions::Utility::printStringLn((((lit$1 + ::SPL::spl_cast&lt;SPL::rstring, SPL::int32 &gt;::cast(iport$0.get_chunkNumber())) + lit$0) + iport$0.get_transcription()));
    ::SPL::Functions::Utility::printStringLn(((((((lit$5 + ::SPL::spl_cast&lt;SPL::rstring, SPL::float64 &gt;::cast(iport$0.get_processingTimeMs())) + lit$4) + ::SPL::spl_cast&lt;SPL::rstring, SPL::float64 &gt;::cast(iport$0.get_audioChunkMs())) + lit$3) + ::SPL::spl_cast&lt;SPL::rstring, SPL::float64 &gt;::cast(iport$0.get_speedupFactor())) + lit$2));
    state$totalProcessingMs += iport$0.get_processingTimeMs();
    state$totalAudioMs += iport$0.get_audioChunkMs();
}
</tupleLogic>
      <punctLogic>{
    if ((SPL::BcyIw_123yuxalGHt_0UPzvHr6jutVOfqYy4EjyWMc7ELFtCMYkxYjxKoc_1GyrP3_0eilO0roi7TbPc_14tWTm1iZBT(punct-1) == SPL::BcyIw_123yuxalGHt_0UPzvHr6jutVOfqYy4EjyWMc7ELFtCMYkxYjxKoc_1GyrP3_0eilO0roi7TbPc_14tWTm1iZBT::FinalMarker)) 
        {
            ::SPL::Functions::Utility::printStringLn(lit$6);
            ::SPL::Functions::Utility::printStringLn((lit$10 + (::SPL::spl_cast&lt;SPL::boolean, SPL::rstring &gt;::cast(lit$7) ? lit$9 : lit$8)));
            ::SPL::Functions::Utility::printStringLn(((lit$13 + ::SPL::spl_cast&lt;SPL::rstring, SPL::int32 &gt;::cast(::SPL::spl_cast&lt;SPL::int32, SPL::rstring &gt;::cast(lit$12))) + lit$11));
            ::SPL::Functions::Utility::printStringLn(((lit$16 + ::SPL::spl_cast&lt;SPL::rstring, SPL::float64 &gt;::cast((state$totalAudioMs / lit$15))) + lit$14));
            ::SPL::Functions::Utility::printStringLn(((lit$19 + ::SPL::spl_cast&lt;SPL::rstring, SPL::float64 &gt;::cast((state$totalProcessingMs / lit$18))) + lit$17));
            ::SPL::Functions::Utility::printStringLn(((lit$21 + ::SPL::spl_cast&lt;SPL::rstring, SPL::float64 &gt;::cast((state$totalAudioMs / state$totalProcessingMs))) + lit$20));
            ::SPL::Functions::Utility::printStringLn(((lit$23 + ::SPL::spl_cast&lt;SPL::rstring, SPL::float64 &gt;::cast(::SPL::Functions::Time::diffAsSecs(::SPL::Functions::Time::getTimestamp(), state$sessionStart))) + lit$22));
            ::SPL::Functions::Utility::printStringLn(lit$24);
        }
}
</punctLogic>
      <attributes>
        <attribute>
          <name>transcription</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
        </attribute>
        <attribute>
          <name>processingTimeMs</name>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
        </attribute>
        <attribute>
          <name>audioChunkMs</name>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
        </attribute>
        <attribute>
          <name>speedupFactor</name>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
        </attribute>
        <attribute>
          <name>chunkNumber</name>
          <cppType>SPL::int32</cppType>
          <splType>int32</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="transcription" type="rstring"/>
        <tt:attr name="processingTimeMs" type="float64"/>
        <tt:attr name="audioChunkMs" type="float64"/>
        <tt:attr name="speedupFactor" type="float64"/>
        <tt:attr name="chunkNumber" type="int32"/>
      </tuple>
    </inputPort>
  </inputPorts>
  <outputPorts/>
  <exceptionPorts/>
</operatorInstanceModel>
