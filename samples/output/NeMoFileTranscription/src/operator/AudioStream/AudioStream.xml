<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<operatorInstanceModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator/instance" xmlns:an="http://www.ibm.com/xmlns/prod/streams/spl/annotation" xmlns:tt="http://www.ibm.com/xmlns/prod/streams/spl/tupleType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <context>
    <kind>spl.utility::Custom</kind>
    <class>AudioStream::AudioStream</class>
    <operatorModelDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl/spl/utility/Custom</operatorModelDirectory>
    <applicationDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples</applicationDirectory>
    <dataDirectory/>
    <outputDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples/output/NeMoFileTranscription</outputDirectory>
    <toolkits>
      <toolkit isCurrentToolkit="false">
        <name>samples</name>
        <rootDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples</rootDirectory>
        <index>0</index>
      </toolkit>
      <toolkit isCurrentToolkit="true">
        <name>spl</name>
        <rootDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl</rootDirectory>
        <index>1</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.teracloud.streamsx.stt</name>
        <rootDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt</rootDirectory>
        <index>2</index>
      </toolkit>
    </toolkits>
    <optimized>true</optimized>
    <verbose>false</verbose>
    <networkByteOrdering>false</networkByteOrdering>
    <codeBeautification>false</codeBeautification>
    <includes>
      <include>"../../type/BJnZ5CG7dYuCzMUhZJwzAL3_0GdbQo3dSshe140tlHizvLTKJjeJwGLYVXIY0saSuxtDflHAbgU4Wsd74BTRfIBC.h"</include>
      <include>"../../type/Bk0Uw25SjlXvT1SWjTbdPsq3rYHs_0MyINGepUqpl6M4N_13fsN9z_008LvigF23BryMh_0YBpGEGMzYN6naxAG2ZCd.h"</include>
    </includes>
    <stateVariables>
      <stateVariable>
        <name>state$currentSample</name>
        <cppType>SPL::uint64</cppType>
        <splType>uint64</splType>
        <value>
          <cppType>SPL::uint64</cppType>
          <splType>uint64</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$3</cppExpression>
          <splExpression>0</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>../com.teracloud.streamsx.stt/FileAudioSource.spl</file>
            <line>51</line>
            <column>52</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>../com.teracloud.streamsx.stt/FileAudioSource.spl</file>
          <line>51</line>
          <column>36</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$bytesPerSample</name>
        <cppType>SPL::uint32</cppType>
        <splType>uint32</splType>
        <value>
          <cppType>SPL::uint32</cppType>
          <splType>uint32</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$4</cppExpression>
          <splExpression>(uint32)(((16 / 8) * 1))</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>../com.teracloud.streamsx.stt/FileAudioSource.spl</file>
            <line>52</line>
            <column>45</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>../com.teracloud.streamsx.stt/FileAudioSource.spl</file>
          <line>52</line>
          <column>28</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$samplesPerBlock</name>
        <cppType>SPL::uint32</cppType>
        <splType>uint32</splType>
        <value>
          <cppType>SPL::uint32</cppType>
          <splType>uint32</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>SPL::uint32(lit$5 / state$bytesPerSample)</cppExpression>
          <splExpression>32768 / bytesPerSample</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>true</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>NeMoFileTranscription.spl</file>
            <line>49</line>
            <column>28</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>../com.teracloud.streamsx.stt/FileAudioSource.spl</file>
          <line>53</line>
          <column>28</column>
        </sourceLocation>
      </stateVariable>
    </stateVariables>
    <runtimeConstants>
      <runtimeConstant>
        <name>lit$0</name>
        <cppType>SPL::uint64</cppType>
        <splType>uint64</splType>
        <value>16000</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$1</name>
        <cppType>SPL::uint64</cppType>
        <splType>uint64</splType>
        <value>1000</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$2</name>
        <cppType>SPL::uint32</cppType>
        <splType>uint32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$3</name>
        <cppType>SPL::uint64</cppType>
        <splType>uint64</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$4</name>
        <cppType>SPL::uint32</cppType>
        <splType>uint32</splType>
        <value>2</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$5</name>
        <cppType>SPL::uint32</cppType>
        <splType>uint32</splType>
        <value>32768</value>
      </runtimeConstant>
    </runtimeConstants>
    <sourceLocation>
      <file>../com.teracloud.streamsx.stt/FileAudioSource.spl</file>
      <line>48</line>
      <column>9</column>
    </sourceLocation>
    <productVersion>7.2.0.0</productVersion>
    <checkpointKind>none</checkpointKind>
  </context>
  <parameters/>
  <inputPorts>
    <inputPort>
      <index>0</index>
      <tupleCppName>iport$0</tupleCppName>
      <tupleCppType>SPL::Bk0Uw25SjlXvT1SWjTbdPsq3rYHs_0MyINGepUqpl6M4N_13fsN9z_008LvigF23BryMh_0YBpGEGMzYN6naxAG2ZCd</tupleCppType>
      <tupleSPLType>tuple&lt;blob data&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>true</mutationAllowed>
      <sourceLocation>
        <file>../com.teracloud.streamsx.stt/FileAudioSource.spl</file>
        <line>48</line>
        <column>53</column>
      </sourceLocation>
      <tupleLogic>{
    do { SPL::BJnZ5CG7dYuCzMUhZJwzAL3_0GdbQo3dSshe140tlHizvLTKJjeJwGLYVXIY0saSuxtDflHAbgU4Wsd74BTRfIBC temp = SPL::BJnZ5CG7dYuCzMUhZJwzAL3_0GdbQo3dSshe140tlHizvLTKJjeJwGLYVXIY0saSuxtDflHAbgU4Wsd74BTRfIBC(iport$0.get_data(), SPL::uint64(SPL::uint64(state$currentSample * lit$1) / lit$0)); submit (temp, lit$2); } while(0);
    state$currentSample += ::SPL::spl_cast&lt;SPL::uint64, SPL::uint32 &gt;::cast(state$samplesPerBlock);
}
</tupleLogic>
      <attributes>
        <attribute>
          <name>data</name>
          <cppType>SPL::blob</cppType>
          <splType>blob</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="data" type="blob"/>
      </tuple>
    </inputPort>
  </inputPorts>
  <outputPorts>
    <outputPort>
      <index>0</index>
      <tupleCppName>oport$0</tupleCppName>
      <tupleCppType>SPL::BJnZ5CG7dYuCzMUhZJwzAL3_0GdbQo3dSshe140tlHizvLTKJjeJwGLYVXIY0saSuxtDflHAbgU4Wsd74BTRfIBC</tupleCppType>
      <tupleSPLType>tuple&lt;blob audioChunk,uint64 audioTimestamp&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>true</mutationAllowed>
      <sourceLocation>
        <file>../com.teracloud.streamsx.stt/FileAudioSource.spl</file>
        <line>48</line>
        <column>9</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>audioChunk</name>
          <cppType>SPL::blob</cppType>
          <splType>blob</splType>
        </attribute>
        <attribute>
          <name>audioTimestamp</name>
          <cppType>SPL::uint64</cppType>
          <splType>uint64</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="audioChunk" type="blob"/>
        <tt:attr name="audioTimestamp" type="uint64"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
      <exceptionPort>false</exceptionPort>
    </outputPort>
  </outputPorts>
  <exceptionPorts/>
</operatorInstanceModel>
