<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<operatorInstanceModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator/instance" xmlns:an="http://www.ibm.com/xmlns/prod/streams/spl/annotation" xmlns:tt="http://www.ibm.com/xmlns/prod/streams/spl/tupleType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <context>
    <kind>spl.utility::Custom</kind>
    <class>Analysis</class>
    <operatorModelDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl/spl/utility/Custom</operatorModelDirectory>
    <applicationDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples</applicationDirectory>
    <dataDirectory/>
    <outputDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples/output/NeMoFileTranscription</outputDirectory>
    <toolkits>
      <toolkit isCurrentToolkit="false">
        <name>samples</name>
        <rootDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/samples</rootDirectory>
        <index>0</index>
      </toolkit>
      <toolkit isCurrentToolkit="true">
        <name>spl</name>
        <rootDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl</rootDirectory>
        <index>1</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.teracloud.streamsx.stt</name>
        <rootDirectory>/homes/jsharpe/teracloud/com.teracloud.streamsx.stt</rootDirectory>
        <index>2</index>
      </toolkit>
    </toolkits>
    <optimized>true</optimized>
    <verbose>false</verbose>
    <networkByteOrdering>false</networkByteOrdering>
    <codeBeautification>false</codeBeautification>
    <includes>
      <include>"../type/BcyIw_123yuxalGHt_0UPzvHr6jutVOfqYy4EjyWMc7ELFtCMYkxYjxKoc_1GyrP3_0eilO0roi7TbPc_14tWTm1iZBT.h"</include>
      <include>"../type/BkuXToNx2yM5B7AXTZjTgjOLzXMlOCn1pQWayey0EwsqXG1SqvxIw28l3vJN_0vo7wI_0qsqY0D9dJBd8Uot8ZGCL.h"</include>
      <include>"../type/Bs5pNmw71y7PkapZ9lqBSwKrkbWCriwV7k_0ArlSoM1rLHrNgAEBvk5Tpn6YTnjdDdoEcBr6nreFdzTolVZ3wtD9.h"</include>
    </includes>
    <stateVariables>
      <stateVariable>
        <name>state$fullTranscription</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$8</cppExpression>
          <splExpression>""</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>NeMoFileTranscription.spl</file>
            <line>73</line>
            <column>57</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>NeMoFileTranscription.spl</file>
          <line>73</line>
          <column>37</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$chunkCount</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>
          <cppType>SPL::int32</cppType>
          <splType>int32</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$9</cppExpression>
          <splExpression>0</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>NeMoFileTranscription.spl</file>
            <line>74</line>
            <column>48</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>NeMoFileTranscription.spl</file>
          <line>74</line>
          <column>35</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$processStart</name>
        <cppType>SPL::timestamp</cppType>
        <splType>timestamp</splType>
        <value>
          <cppType>SPL::timestamp</cppType>
          <splType>timestamp</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>::SPL::Functions::Time::getTimestamp()</cppExpression>
          <splExpression>getTimestamp()</splExpression>
          <hasFunctions>true</hasFunctions>
          <hasSideEffects>true</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>NeMoFileTranscription.spl</file>
            <line>75</line>
            <column>54</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>NeMoFileTranscription.spl</file>
          <line>75</line>
          <column>39</column>
        </sourceLocation>
      </stateVariable>
    </stateVariables>
    <runtimeConstants>
      <runtimeConstant>
        <name>lit$0</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$1</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>" "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$2</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>" \t\n"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$3</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>" "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$4</name>
        <cppType>SPL::boolean</cppType>
        <splType>boolean</splType>
        <value>false</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$5</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>2</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$6</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"/homes/jsharpe/teracloud/com.teracloud.streamsx.stt/test_data/audio/11-ibm-culture-2min-16k.wav"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$7</name>
        <cppType>SPL::uint32</cppType>
        <splType>uint32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$8</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>""</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$9</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>0</value>
      </runtimeConstant>
    </runtimeConstants>
    <sourceLocation>
      <file>NeMoFileTranscription.spl</file>
      <line>70</line>
      <column>9</column>
    </sourceLocation>
    <productVersion>7.2.0.0</productVersion>
    <checkpointKind>none</checkpointKind>
  </context>
  <parameters/>
  <inputPorts>
    <inputPort>
      <index>0</index>
      <tupleCppName>iport$0</tupleCppName>
      <tupleCppType>SPL::BkuXToNx2yM5B7AXTZjTgjOLzXMlOCn1pQWayey0EwsqXG1SqvxIw28l3vJN_0vo7wI_0qsqY0D9dJBd8Uot8ZGCL</tupleCppType>
      <tupleSPLType>tuple&lt;rstring transcription&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>true</mutationAllowed>
      <sourceLocation>
        <file>NeMoFileTranscription.spl</file>
        <line>70</line>
        <column>57</column>
      </sourceLocation>
      <tupleLogic>{
    if ((state$chunkCount == lit$0)) 
        {
            state$processStart = ::SPL::Functions::Time::getTimestamp();
        }
    state$fullTranscription += (iport$0.get_transcription() + lit$1);
    state$chunkCount++;
}
</tupleLogic>
      <punctLogic>{
    if ((SPL::BcyIw_123yuxalGHt_0UPzvHr6jutVOfqYy4EjyWMc7ELFtCMYkxYjxKoc_1GyrP3_0eilO0roi7TbPc_14tWTm1iZBT(punct-1) == SPL::BcyIw_123yuxalGHt_0UPzvHr6jutVOfqYy4EjyWMc7ELFtCMYkxYjxKoc_1GyrP3_0eilO0roi7TbPc_14tWTm1iZBT::FinalMarker)) 
        {
            const SPL::timestamp id$processEnd = ::SPL::Functions::Time::getTimestamp();
            const SPL::float64 id$processingTimeSec = ::SPL::Functions::Time::diffAsSecs(id$processEnd, state$processStart);
            state$fullTranscription = ::SPL::Functions::String::trim(state$fullTranscription, lit$2);
            const SPL::list&lt;SPL::rstring &gt; id$words = ::SPL::Functions::String::tokenize(state$fullTranscription, lit$3, (SPL::boolean)lit$4);
            const SPL::int32 id$wordCount = ::SPL::Functions::Collections::size(id$words);
            const SPL::int32 id$charCount = ::SPL::Functions::String::length(state$fullTranscription);
            const SPL::float64 id$estimatedAudioDuration = (::SPL::spl_cast&lt;SPL::float64, SPL::int32 &gt;::cast(state$chunkCount) * lit$5);
            const SPL::float64 id$speedupFactor = (id$estimatedAudioDuration / id$processingTimeSec);
            do { SPL::Bs5pNmw71y7PkapZ9lqBSwKrkbWCriwV7k_0ArlSoM1rLHrNgAEBvk5Tpn6YTnjdDdoEcBr6nreFdzTolVZ3wtD9 temp = SPL::Bs5pNmw71y7PkapZ9lqBSwKrkbWCriwV7k_0ArlSoM1rLHrNgAEBvk5Tpn6YTnjdDdoEcBr6nreFdzTolVZ3wtD9(lit$6, state$fullTranscription, id$wordCount, id$charCount, id$estimatedAudioDuration, id$processingTimeSec, id$speedupFactor, state$processStart, id$processEnd); submit (temp, lit$7); } while(0);
        }
}
</punctLogic>
      <attributes>
        <attribute>
          <name>transcription</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="transcription" type="rstring"/>
      </tuple>
    </inputPort>
  </inputPorts>
  <outputPorts>
    <outputPort>
      <index>0</index>
      <tupleCppName>oport$0</tupleCppName>
      <tupleCppType>SPL::Bs5pNmw71y7PkapZ9lqBSwKrkbWCriwV7k_0ArlSoM1rLHrNgAEBvk5Tpn6YTnjdDdoEcBr6nreFdzTolVZ3wtD9</tupleCppType>
      <tupleSPLType>tuple&lt;rstring filename,rstring transcription,int32 wordCount,int32 charCount,float64 audioDurationSec,float64 processingTimeSec,float64 speedupFactor,timestamp startTime,timestamp endTime&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>true</mutationAllowed>
      <sourceLocation>
        <file>NeMoFileTranscription.spl</file>
        <line>70</line>
        <column>9</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>filename</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
        </attribute>
        <attribute>
          <name>transcription</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
        </attribute>
        <attribute>
          <name>wordCount</name>
          <cppType>SPL::int32</cppType>
          <splType>int32</splType>
        </attribute>
        <attribute>
          <name>charCount</name>
          <cppType>SPL::int32</cppType>
          <splType>int32</splType>
        </attribute>
        <attribute>
          <name>audioDurationSec</name>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
        </attribute>
        <attribute>
          <name>processingTimeSec</name>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
        </attribute>
        <attribute>
          <name>speedupFactor</name>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
        </attribute>
        <attribute>
          <name>startTime</name>
          <cppType>SPL::timestamp</cppType>
          <splType>timestamp</splType>
        </attribute>
        <attribute>
          <name>endTime</name>
          <cppType>SPL::timestamp</cppType>
          <splType>timestamp</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="filename" type="rstring"/>
        <tt:attr name="transcription" type="rstring"/>
        <tt:attr name="wordCount" type="int32"/>
        <tt:attr name="charCount" type="int32"/>
        <tt:attr name="audioDurationSec" type="float64"/>
        <tt:attr name="processingTimeSec" type="float64"/>
        <tt:attr name="speedupFactor" type="float64"/>
        <tt:attr name="startTime" type="timestamp"/>
        <tt:attr name="endTime" type="timestamp"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
      <exceptionPort>false</exceptionPort>
    </outputPort>
  </outputPorts>
  <exceptionPorts/>
</operatorInstanceModel>
