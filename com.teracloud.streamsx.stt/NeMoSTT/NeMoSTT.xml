<?xml version="1.0" encoding="UTF-8"?>
<operatorModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" 
               xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common">
  <cppOperatorModel>
    <context>
      <description>
The NeMoSTT operator performs speech-to-text conversion using NVIDIA NeMo's 
cache-aware streaming FastConformer model. This model is trained on over 10,000 
hours of speech data and provides excellent accuracy for real-time streaming 
speech recognition.

The operator processes audio streams and outputs transcribed text using the
nvidia/stt_en_fastconformer_hybrid_large_streaming_multi model.
      </description>
      <customLiterals>
        <enumeration>
          <name>AudioFormat</name>
          <value>mono8k</value>
          <value>mono16k</value>
          <value>mono22k</value>
          <value>mono44k</value>
          <value>mono48k</value>
        </enumeration>
      </customLiterals>
      <libraryDependencies>
        <library>
          <cmn:description>NeMo CTC implementation library</cmn:description>
          <cmn:managedLibrary>
            <cmn:lib>nemo_ctc_interface</cmn:lib>
            <cmn:libPath>../../impl/lib</cmn:libPath>
            <cmn:includePath>../../impl/include</cmn:includePath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
      <providesSingleThreadedContext>Always</providesSingleThreadedContext>
    </context>
    <parameters>
      <allowAny>false</allowAny>
      <parameter>
        <name>modelPath</name>
        <description>Path to the NeMo model file (.nemo)</description>
        <optional>false</optional>
        <rewriteAllowed>false</rewriteAllowed>
        <expressionMode>AttributeFree</expressionMode>
        <type>rstring</type>
      </parameter>
      <parameter>
        <name>audioFormat</name>
        <description>Audio format of the input stream</description>
        <optional>true</optional>
        <rewriteAllowed>false</rewriteAllowed>
        <expressionMode>CustomLiteral</expressionMode>
        <type>AudioFormat</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>chunkDurationMs</name>
        <description>Duration of audio chunks to process in milliseconds</description>
        <optional>true</optional>
        <rewriteAllowed>false</rewriteAllowed>
        <expressionMode>AttributeFree</expressionMode>
        <type>int32</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>minSpeechDurationMs</name>
        <description>Minimum speech duration to trigger transcription in milliseconds</description>
        <optional>true</optional>
        <rewriteAllowed>false</rewriteAllowed>
        <expressionMode>AttributeFree</expressionMode>
        <type>int32</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts>
      <inputPortSet>
        <description>Audio input port</description>
        <tupleMutationAllowed>false</tupleMutationAllowed>
        <windowingMode>NonWindowed</windowingMode>
        <windowPunctuationInputMode>Oblivious</windowPunctuationInputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </inputPortSet>
    </inputPorts>
    <outputPorts>
      <outputPortSet>
        <description>Transcription output port</description>
        <expressionMode>Nonexistent</expressionMode>
        <autoAssignment>false</autoAssignment>
        <completeAssignment>false</completeAssignment>
        <rewriteAllowed>false</rewriteAllowed>
        <windowPunctuationOutputMode>Preserving</windowPunctuationOutputMode>
        <tupleMutationAllowed>true</tupleMutationAllowed>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
    </outputPorts>
  </cppOperatorModel>
</operatorModel>